#! /bin/bash

#dependencies: ipcalc, iproute2, dnsmasq, radvd

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit 1
fi

tmpfolder=$(head -c 8 /proc/sys/kernel/random/uuid)
mkdir "/tmp/${tmpfolder}"

four_flag='true'
six_flag='true'
interface=''
network='192.168.138.0/24'
verbose='false'

print_usage() {
  printf "Usage: -i <interface> define the downstream interface"
}

while getopts '46i:r:v' flag; do
  case "${flag}" in
    4) six_flag='false' ;;
    6) four_flag='false' ;;
    i) interface="${OPTARG}" ;;
    r) ip4space="${OPTARG}" ;;
    v) verbose='true' ;;
    *) print_usage
       exit 1 ;;
  esac
done

# check if interface is an existing interface
if ! ip link show ${interface} >/dev/null; then
    printf "Interface does not exist!"
    exit 1
fi

dnsmasqargs=''

if ${four_flag}; then
  # füge lokale ipv4 addressen hinzu
  echo "[#] ip addr add $(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}')/$(ipcalc ${network} -b | awk -F'= ' '/Netmask:/{print $2}') dev ${interface}"
  ip addr add $(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}')/$(ipcalc ${network} -b | awk -F'= ' '/Netmask:/{print $2}') dev ${interface}

  # configure dhcp
  dnsmasqargs="${dnsmasqargs} --dhcp-range=$(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}'),$(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMax:/{print $2}'),24h --dhcp-option=option:router,$(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}') --dhcp-option=option:dns-server,$(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}') --dhcp-option=option:netmask,$(ipcalc ${network} -b | awk -F"[ ',]+" '/Netmask:/{print $2}')"
fi

if ${six_flag}; then
  # füge lokale ipv6 addressen hinzu
  echo "[!] pass v6 config. not implemented yet"
  # starte radvd
fi

# start dns
echo -e "#! /bin/bash\n\necho [+] \$1 \$2 \$3 >> /tmp/${tmpfolder}/dhcp.log" > /tmp/${tmpfolder}/dhcp-log.sh
chmod +x /tmp/${tmpfolder}/dhcp-log.sh
touch /tmp/${tmpfolder}/dhcp.log
dnsmasqargs="${dnsmasqargs} --port=53 --log-facility=/var/log/dnsmasq.log --dhcp-script=/tmp/${tmpfolder}/dhcp-log.sh --dhcp-leasefile=/tmp/${tmpfolder}/dhcp.leases"
echo "[#] dnsmasq ${dnsmasqargs}"
dnsmasq ${dnsmasqargs}

tail -f /tmp/${tmpfolder}/dhcp.log &
read

# cleanup code
echo "[*] killing dnsmasq and deleting address"
kill "$(cat /var/run/dnsmasq.pid)"
ip addr del $(ipcalc ${network} -b | awk -F"[ ',]+" '/HostMin:/{print $2}')/$(ipcalc ${network} -b | awk -F'= ' '/Netmask:/{print $2}') dev ${interface}
